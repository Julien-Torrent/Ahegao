@model SiteViewModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="jumbotron">

    @using (Html.BeginForm(FormMethod.Post))
    {
        <div class="text-center form-group">
            <h1 class="display-4">Ahegao</h1>
        </div>

        <div class="form-group input-group">
            @Html.DropDownListFor(model => model.SiteId, new SelectList(Model.Sites, "Id", "Name"), new { id = "Id", @class = "form-control" })
        </div>

        <div class="form-group input-group">
            <div class="input-group-prepend">
                <span class="input-group-text" id="siteUrl">@Model.Sites[0].Url</span>
            </div>
            @Html.EditorFor(model => model.ToDownload, new { htmlAttributes = new { @class = "form-control", @placeholder = "to download" } })
        </div>

        <div class="form-group input-group justify-content-center">
            <button class="btn btn-primary btn-warning"> DOWNLOAD !</button>
        </div>
    }
</div>

<script>
    $("#Id").change(function () {
        var site = "";
        switch (this.value) {
            @foreach(var elt in Model.Sites)
            {
                <text> case "@elt.Id": site = "@elt.Url"; break; </text>
            }
        }
        $("#siteUrl").text(site);
    });
</script>
